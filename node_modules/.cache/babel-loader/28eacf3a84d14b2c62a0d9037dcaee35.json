{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shashi.kant_valueinn\\\\Desktop\\\\Tolet\\\\tolet-web\\\\src\\\\components\\\\Test.jsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Test extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setCounter = e => {\n      this.setState({\n        count: this.state.count + 1\n      });\n    };\n\n    this.state = {\n      count: 0\n    };\n  }\n\n  componentDidMount() {\n    console.log('componentDidMount ', this.state.count);\n  }\n\n  shouldComponentUpdate(props) {\n    console.log(props);\n    console.log('shouldComponentUpdate');\n\n    if (this.state.count == \"5\") {\n      return true;\n    }\n\n    return true;\n  }\n\n  componentWillUnmount() {\n    console.log(\"component will unmount of Test component \");\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [this.state.count == \"6\" ? /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"state value is \", this.state.count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 16\n      }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"state value is less than \", this.state.count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 61\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"click me\",\n        onClick: this.setCounter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 18\n      }, this), this.state.count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/shashi.kant_valueinn/Desktop/Tolet/tolet-web/src/components/Test.jsx"],"names":["React","Component","Test","constructor","props","setCounter","e","setState","count","state","componentDidMount","console","log","shouldComponentUpdate","componentWillUnmount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AACA,eAAe,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AAExCE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACb,UAAMA,KAAN;;AADa,SASjBC,UATiB,GASJC,CAAD,IAAK;AACd,WAAKC,QAAL,CAAe;AAACC,QAAAA,KAAK,EAAC,KAAKC,KAAL,CAAWD,KAAX,GAAiB;AAAxB,OAAf;AACH,KAXiB;;AAEb,SAAKC,KAAL,GAAa;AACTD,MAAAA,KAAK,EAAC;AADG,KAAb;AAKA;;AAMLE,EAAAA,iBAAiB,GAAE;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAmC,KAAKH,KAAL,CAAWD,KAA9C;AACJ;;AAGDK,EAAAA,qBAAqB,CAACT,KAAD,EAAO;AAEvBO,IAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACDO,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;;AACA,QAAG,KAAKH,KAAL,CAAWD,KAAX,IAAkB,GAArB,EAAyB;AACjB,aAAO,IAAP;AACP;;AAEL,WAAO,IAAP;AACC;;AAEDM,EAAAA,oBAAoB,GAAE;AACvBH,IAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ;AACE;;AAGDG,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,KAAD,CAAO,QAAP;AAAA,iBAEK,KAAKN,KAAL,CAAWD,KAAX,IAAkB,GAAlB,gBACF;AAAA,sCAAoB,KAAKC,KAAL,CAAWD,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,cADE,gBAC2C;AAAA,gDAA8B,KAAKC,KAAL,CAAWD,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,cAHhD,eAMK;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,UAA3B;AAAsC,QAAA,OAAO,EAAE,KAAKH;AAApD;AAAA;AAAA;AAAA;AAAA,cANL,EAOO,KAAKI,KAAL,CAAWD,KAPlB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH;;AAjDuC","sourcesContent":["import React, { Component } from 'react'\r\nexport default class Test extends Component {\r\n    \r\n    constructor(props){\r\n         super(props)\r\n         this.state = {\r\n             count:0 ,\r\n              \r\n\r\n         }\r\n        }\r\n\r\n     setCounter =(e)=>{\r\n        this.setState( {count:this.state.count+1} )\r\n    }\r\n     \r\n    componentDidMount(){\r\n         console.log('componentDidMount ' , this.state.count);\r\n    }\r\n\r\n\r\n    shouldComponentUpdate(props){\r\n         \r\n         console.log(props);\r\n        console.log('shouldComponentUpdate');\r\n        if(this.state.count==\"5\"){ \r\n                return true\r\n        }\r\n\r\n    return true  \r\n    }\r\n    \r\n    componentWillUnmount(){\r\n   console.log(\"component will unmount of Test component \");        \r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n             \r\n                {this.state.count==\"6\"? \r\n               <h4>state value is {this.state.count}</h4> : <h4>state value is less than {this.state.count}</h4> \r\n             }\r\n\r\n                 <input type=\"button\" value=\"click me\" onClick={this.setCounter} />\r\n                  {this.state.count}\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}