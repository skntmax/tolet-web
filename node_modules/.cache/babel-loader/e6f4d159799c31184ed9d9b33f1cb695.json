{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shashi.kant_valueinn\\\\Desktop\\\\Tolet\\\\tolet-web\\\\src\\\\components\\\\v1\\\\Main.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './../../assets/css/main.css';\nimport Test from '../Test';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n\n  const [value, setValue] = useState({\n    name: \"\",\n    title: \"\",\n    attchment: [],\n    video: [],\n    testViews: false\n  });\n  const [err, setError] = useState({\n    setName: \"\",\n    setTitle: \"\"\n  });\n\n  const submit = e => {\n    debugger;\n    console.log(value);\n    const model = {\n      name: value.name,\n      title: value.title\n    };\n\n    if (value.name != \"\" && value.title != \"\") {\n      axios.post('submitform/', model).then(res => {\n        console.log(\" response \", res.data);\n\n        if (res.data.status == true) {\n          const formdata = new FormData();\n\n          for (let i = 0; i < value.attchment.length; i++) {\n            formdata.append('attchment', value.attchment[i]);\n            axios.post('/addFile', formdata, {\n              headers: {\n                \"Content-Type\": \"multipart/form-data\"\n              }\n            }).then(res => {\n              console.log(res.data.message);\n            });\n          }\n\n          alert(`name  ${res.data.name} and title ${res.data.title} saved `);\n        } else {\n          alert(` error `);\n        }\n      }).catch(err => {\n        console.log(\"Error : \", err);\n      });\n    } else {\n      if (value.name == \"\") {\n        setError({\n          setName: \" please enter name \"\n        });\n      }\n\n      if (value.title == \"\") {\n        setError({\n          setTitle: \"please Enter title  \"\n        });\n      }\n\n      if (value.name == \"\" && value.title == \"\") {\n        setError({\n          setName: \"please enter name \"\n        });\n        setError({\n          setTitle: \" please Enter title \"\n        });\n      }\n    }\n  };\n\n  const onChangeHandler = e => {\n    debugger;\n\n    if (e.target.name == \"attchment\") {\n      //  for(let i=0; i<=e.target.files.length-1 ; i++){\n      setValue({ ...value,\n        [e.target.name]: e.target.files\n      }); // }\n\n      return;\n    }\n\n    if (e.target.name == \"video\") {\n      setValue({ ...value,\n        [e.target.name]: e.target.files\n      });\n    }\n\n    setValue({ ...value,\n      [e.target.name]: e.target.value\n    });\n    console.log(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: \"show Test component \",\n        onChange: e => {\n          setValue({\n            testViews: !testViews\n          });\n        },\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 18\n      }, this), value.testViews == true ? /*#__PURE__*/_jsxDEV(Test, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 43\n      }, this) : \"No Test component \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"wrCUF20/jsSoYKaHwy0dZ5Il/28=\");\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/shashi.kant_valueinn/Desktop/Tolet/tolet-web/src/components/v1/Main.jsx"],"names":["React","useState","axios","Test","Main","value","setValue","name","title","attchment","video","testViews","err","setError","setName","setTitle","submit","e","console","log","model","post","then","res","data","status","formdata","FormData","i","length","append","headers","message","alert","catch","onChangeHandler","target","files"],"mappings":"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","sourcesContent":["import React , {useState    } from 'react'\r\nimport axios from 'axios'\r\nimport './../../assets/css/main.css'\r\nimport Test from '../Test' ; \r\n\r\nexport default function Main() {\r\n\r\n     const [value,setValue] = useState({\r\n         name:\"\" , \r\n         title :\"\" ,\r\n         attchment: [] ,\r\n         video :[] ,\r\n         testViews:false\r\n     })\r\n\r\n     const [err , setError] = useState({\r\n          setName:\"\" , \r\n          setTitle : \"\" \r\n     })\r\n      \r\n    const submit = (e)=>{\r\n        debugger\r\n        console.log(value) \r\n     \r\n        const model ={ \r\n              name : value.name , \r\n              title: value.title   \r\n            }\r\n                                    \r\n          if(value.name!=\"\" && value.title!=\"\" ){\r\n                        axios.post('submitform/' , model ).then((res)=>{\r\n                        console.log(\" response \" , res.data )\r\n                        if(res.data.status==true){\r\n                         const formdata = new FormData()\r\n\r\n                            for(let i=0; i<value.attchment.length ; i++){\r\n                                formdata.append('attchment' , value.attchment[i] )\r\n                                axios.post('/addFile' , formdata, \r\n                                     {\r\n                                 headers : { \r\n                                        \"Content-Type\": \"multipart/form-data\"\r\n                                      }} )\r\n                                       .then(res=>{\r\n                                     console.log(res.data.message)\r\n                                 })    \r\n                             }\r\n\r\n                         \r\n                            alert(`name  ${res.data.name} and title ${res.data.title} saved `)           \r\n                            \r\n                        }\r\n                            else{\r\n                            alert(` error `)\r\n                            }\r\n                    }).catch(err=>{\r\n                        console.log(\"Error : \"  , err)\r\n                    })\r\n    }\r\n    else{\r\n         \r\n        if(value.name==\"\"){\r\n             setError({setName:\" please enter name \"})\r\n        }\r\n        if(value.title==\"\"){\r\n             setError({setTitle:\"please Enter title  \"})\r\n            }\r\n\r\n     if( value.name==\"\" && value.title==\"\" ){\r\n         \r\n        setError({setName:\"please enter name \"})\r\n        setError({setTitle:\" please Enter title \" }) \r\n\r\n            }\r\n     \r\n        }     \r\n      \r\n     \r\n    }\r\n    \r\n    const onChangeHandler = (e)=>{\r\n        debugger\r\n\r\n\r\n\r\n        if(e.target.name==\"attchment\") {\r\n            //  for(let i=0; i<=e.target.files.length-1 ; i++){\r\n              setValue( {  ...value ,[e.target.name]:e.target.files  }  )\r\n            // }\r\n           return  \r\n            }\r\n         if(e.target.name==\"video\"){\r\n            setValue( {  ...value ,[e.target.name]: e.target.files }  )\r\n              \r\n         }   \r\n\r\n        setValue({ ...value ,  [e.target.name] : e.target.value } );\r\n         console.log(value)\r\n        \r\n         }\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n\r\n\r\n                 { /* <input  type=\"text\" value={value.name} onChange={onChangeHandler} name=\"name\"   /> <br /> \r\n                     {\r\n                    err.setName!=\"\" ? <span className=\"text-danger\"> {err.setName }</span>  :\"\"   \r\n                   }\r\n                <br />\r\n                 <input  type=\"text\" value={value.title} onChange={onChangeHandler}     name=\"title\"  /> <br /> \r\n                 {\r\n                    err.setTitle!=\"\" ? <span className=\"text-danger\"> {err.setTitle}  </span>  :\"\"   \r\n                 } \r\n                <br />\r\n                 \r\n                select File <input type=\"file\"  name=\"attchment\"  multiple  onChange={onChangeHandler} /> \r\n\r\n                <br />  <br />\r\n                select Video <input type=\"file\"  name=\"video\"   onChange={onChangeHandler} />   \r\n                 <input type=\"submit\" onClick={submit}   value=\"submit\" />\r\n\r\n                */ }\r\n\r\n                <div \r\n                // style={{\r\n                //     clipPath: \"polygon(34% 29%, 75% 0%, 24% 66%, 67% 90%, 43% 82%, 14% 72%)\" , \r\n                //     height:\"100vh\",\r\n                //     backgroundColor:\"#268785\" , \r\n                //     \"color\" :\"black\"  \r\n                // }}\r\n                \r\n                >\r\n                 { /*    <div className=\"box stack-top text-center\" > \r\n             Welcome Back  \r\n                </div> */ } \r\n                 <input  value=\"show Test component \" onChange={e=>{setValue({testViews:!testViews})}}> </input>\r\n                  {\r\n                    value.testViews==true?<Test /> :\"No Test component \"\r\n                  } \r\n                  \r\n                </div>\r\n\r\n                 \r\n\r\n\r\n\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}