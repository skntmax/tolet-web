{"ast":null,"code":"var _jsxFileName = \"/home/shashi/Desktop/tolet/tolet-web/src/components/Test.jsx\";\nimport React, { Component } from 'react';\nexport default class Test extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setCounter = e => {\n      this.setState({\n        count: this.state.count + 1\n      });\n    };\n\n    this.state = {\n      count: 0\n    };\n    console.log(' constructor ', this.state.count);\n  }\n\n  componentDidMount() {\n    console.log('componentDidMount ', this.state.count);\n  }\n\n  shouldComponentUpdate(props) {\n    console.log(props);\n    console.log('shouldComponentUpdate');\n\n    if (this.state.count == \"5\") {\n      return true;\n    }\n\n    return true;\n  }\n\n  componentWillUnmount() {\n    console.log(\" load hone se pehle  \");\n  }\n\n  componentWillUnmount() {\n    console.log(\"component will unmount of Test component \");\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, console.log(this.state.count), this.state.count == \"6\" ? /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 16\n      }\n    }, \"state value is \", this.state.count) : /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 61\n      }\n    }, \"state value is less than \", this.state.count), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      value: \"click me\",\n      onClick: this.setCounter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 18\n      }\n    }), this.state.count);\n  }\n\n}","map":{"version":3,"sources":["/home/shashi/Desktop/tolet/tolet-web/src/components/Test.jsx"],"names":["React","Component","Test","constructor","props","setCounter","e","setState","count","state","console","log","componentDidMount","shouldComponentUpdate","componentWillUnmount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,eAAe,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AAExCE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACb,UAAMA,KAAN;;AADa,SAQjBC,UARiB,GAQJC,CAAD,IAAK;AACd,WAAKC,QAAL,CAAe;AAACC,QAAAA,KAAK,EAAC,KAAKC,KAAL,CAAWD,KAAX,GAAiB;AAAxB,OAAf;AACH,KAViB;;AAEb,SAAKC,KAAL,GAAa;AACTD,MAAAA,KAAK,EAAC;AADG,KAAb;AAGGE,IAAAA,OAAO,CAACC,GAAR,CAAa,eAAb,EAA+B,KAAKF,KAAL,CAAWD,KAA1C;AACH;;AAMLI,EAAAA,iBAAiB,GAAE;AACdF,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAmC,KAAKF,KAAL,CAAWD,KAA9C;AACJ;;AAEDK,EAAAA,qBAAqB,CAACT,KAAD,EAAO;AACvBM,IAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACDM,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;;AACA,QAAG,KAAKF,KAAL,CAAWD,KAAX,IAAkB,GAArB,EAAyB;AACjB,aAAO,IAAP;AACP;;AACL,WAAO,IAAP;AACC;;AAGDM,EAAAA,oBAAoB,GAAE;AAElBJ,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACH;;AAEFG,EAAAA,oBAAoB,GAAE;AACjBJ,IAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ;AACF;;AAGFI,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEML,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAL,CAAWD,KAAvB,CAFN,EAIK,KAAKC,KAAL,CAAWD,KAAX,IAAkB,GAAlB,gBACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAoB,KAAKC,KAAL,CAAWD,KAA/B,CADE,gBAC2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAA8B,KAAKC,KAAL,CAAWD,KAAzC,CALhD,eAOK;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,UAA3B;AAAsC,MAAA,OAAO,EAAE,KAAKH,UAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPL,EAQO,KAAKI,KAAL,CAAWD,KARlB,CADJ;AAaH;;AApDuC","sourcesContent":["import React, { Component } from 'react'\nexport default class Test extends Component {\n    \n    constructor(props){\n         super(props)\n         this.state = {\n             count:0 ,\n         }\n            console.log( ' constructor ' , this.state.count );\n        }\n\n     setCounter =(e)=>{\n        this.setState( {count:this.state.count+1} )\n    }\n     \n    componentDidMount(){\n         console.log('componentDidMount ' , this.state.count);\n    }\n\n    shouldComponentUpdate(props){\n         console.log(props);\n        console.log('shouldComponentUpdate');\n        if(this.state.count==\"5\"){ \n                return true\n        }\n    return true  \n    }\n\n\n    componentWillUnmount(){\n    \n        console.log(\" load hone se pehle  \");\n    }\n\n   componentWillUnmount(){\n        console.log(\"component will unmount of Test component \");        \n     }\n\n\n    render() {\n        return (\n            <React.Fragment>\n                  \n                 {console.log(this.state.count)}\n                   \n                {this.state.count==\"6\"? \n               <h4>state value is {this.state.count}</h4> : <h4>state value is less than {this.state.count}</h4> \n             }\n                 <input type=\"button\" value=\"click me\" onClick={this.setCounter} />\n                  {this.state.count}\n\n            </React.Fragment>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}